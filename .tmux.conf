# sane defaults
set -g escape-time 10
set -g set-clipboard on
set -g mode-keys vi
set -g mouse on

# Rebind C-b to `
unbind C-b
set -g prefix `
bind ` send-prefix

# Add full colours
set -g default-terminal 'screen-256color'

# Increase the scrollback buffer
set -g history-limit 10000

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# Switch panes using vim keybinds
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version = 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Use zsh for tmux
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key | split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key - split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0


#+---------+
#+ Options +
#+---------+
set -g status-interval 1
set -g status on

#+--------+
#+ Status +
#+--------+
#+--- Layout ---+
set -g status-justify left

#+--- Colors ---+
inactive_window_bg=black
active_window_bg=brightyellow
inactive_window_fg=white
active_window_fg=brightwhite
side_color=white
side_color2="#3E4452"
bar_color=brightwhite

#+-------+
#+ Panes +
#+-------+
set -g display-panes-colour black
set -g display-panes-active-colour brightblack


#+----------------+
#+ Plugin Support +
#+----------------+
#+--- tmux-prefix-highlight ---+
set -g @prefix_highlight_output_prefix "#[fg=brightcyan]#[bg=$bar_color]#[nobold]#[noitalics]#[nounderscore]#[bg=brightcyan]#[fg=$bar_color]"
set -g @prefix_highlight_output_suffix "#[fg=$side_color2]#[bg=brightcyan]"
set -g @prefix_highlight_empty_prompt "#[fg=$side_color2]#[bg=$bar_color]"          # default is '' (empty char)
set -g @prefix_highlight_prefix_prompt '#[bold] PREFIX '
#+--------+
#+ Status +
#+--------+
#+--- Bars ---+
set -g status-right-length 51
set -g status-left-length 51
set -g status-bg $bar_color
set -g status-left "#[fg=black,bg=$side_color,bold] #S #[fg=$side_color,bg=$bar_color,nobold,noitalics,nounderscore]"
set -g status-right "#{prefix_highlight}#[fg=white,bg=$side_color2,nobold,noitalics,nounderscore] %H:%M:%S #[fg=$side_color,bg=$side_color2,nobold,noitalics,nounderscore]#[fg=black,bg=$side_color,bold] #H "

#+--- Windows ---+
set -g window-status-format "#[fg=$bar_color,bg=$inactive_window_bg,nobold,noitalics,nounderscore] #[fg=$inactive_window_fg,bg=$inactive_window_bg]#I #[fg=$inactive_window_fg,bg=$inactive_window_bg,nobold,noitalics,nounderscore] #[fg=$inactive_window_fg,bg=$inactive_window_bg]#{=-20:window_name} #[fg=$inactive_window_bg,bg=$bar_color,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=$bar_color,bg=$active_window_bg,nobold,noitalics,nounderscore] #[fg=$active_window_fg,bg=$active_window_bg]#I #[fg=$active_window_fg,bg=$active_window_bg,nobold,noitalics,nounderscore] #[fg=$active_window_fg,bg=$active_window_bg]#{=-20:window_name} #[fg=$active_window_bg,bg=$bar_color,nobold,noitalics,nounderscore]"
set -g window-status-separator ""

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
set-option -g renumber-windows on

set-option -g status "on"

set -g pane-border-style bg=black,fg=blue
set -g pane-active-border-style bg=black,fg=blue

set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
